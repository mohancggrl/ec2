---
- hosts: localhost
  tasks:
    - name: Setting up the Security Group for new instance
      ec2_group:
          name: Ansible_Security_Group_AWS
          description: Allowing Traffic on port 22 and 80
          region: us-west-2
          rules:
           - proto: tcp
             from_port: 80
             to_port: 80
             cidr_ip: 0.0.0.0/0

           - proto: tcp
             from_port: 22
             to_port: 22
             cidr_ip: 0.0.0.0/0

           - proto: icmp
             from_port: -1
             to_port: -1
             cidr_ip: 0.0.0.0/0
          rules_egress:
           - proto: all
             cidr_ip: 0.0.0.0/0
          vpc_id: vpc-b93743c1

    - name: Provision EC2 instance
      ec2:
         key_name: mahi
         region: us-west-2
         instance_type: t2.micro
         image: ami-0bc06212a56393ee1
         user_data: "{{ lookup('file', '/opt/apache.sh') }}"
         wait: yes
         wait_timeout: 500
         count: 2
         instance_tags:
            Name: AWS-Ansible
         volumes:
            - device_name: /dev/xvda
              volume_type: gp2
              volume_size: 10
         monitoring: yes
         vpc_subnet_id: subnet-bb63a5c3
         assign_public_ip: yes
         group: Ansible_Security_Group_AWS
      register: ec2

    - name: Wait for SSH to come up
      wait_for:
          host: "{{ item.public_dns_name }}"
          port: 22
          delay: 60
          timeout: 320
          state: started
      with_items: "{{ ec2.instances }}"
        
      
    - name: setup a simple load balancer
      ec2_elb_lb:
        name: aws-elb-demo
        state: present
        region: us-west-2
        zones:
         - us-west-2a
         - us-west-2b
        instance_ids: "{{ item.id }}"
        listeners:
         - protocol: http
           load_balancer_port: 80
           instance_port: 80
        health_check:
           ping_protocol: http # options are http, https, ssl, tcp
           ping_port: 80
           ping_path: "/index.html" # not required for tcp or ssl
           response_timeout: 5 # seconds
           interval: 30 # seconds
           unhealthy_threshold: 2
           healthy_threshold: 10
      with_items: "{{ ec2.instances }}"

