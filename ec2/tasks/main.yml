- name: Create security group
  ec2_group:
    name: demo_security_group
    description: demo security group
    region: us-west-2
    rules:
      - proto: tcp  # ssh
        from_port: 22
        to_port: 22
        cidr_ip: 0.0.0.0/0
      - proto: tcp  # http
        from_port: 80
        to_port: 80
        cidr_ip: 0.0.0.0/0
      - proto: tcp  # https
        from_port: 443
        to_port: 443
        cidr_ip: 0.0.0.0/0
    rules_egress:
      - proto: all
        cidr_ip: 0.0.0.0/0
    vpc_id: vpc-b93743c1
    register: demo_firewall

- name: Create an EC2 instance
  ec2:
    key_name: mahi
    region: us-west-2
    group_id: "{{ demo_firewall.group_id }}"
    instance_type: t2.micro
    image: ami-0bc06212a56393ee1
    user_data: "{{ lookup('file', 'files/apache.sh') }}"
    wait: yes
    instance_tags:
      Name: AWS-Ansible
    vpc_subnet_id: subnet-bb63a5c3
    assign_public_ip: yes
    register: ec2

- name: wait for the servers to appear on the network
  wait_for: host={{ item.public_dns_name }} port=22 delay=10 timeout=180 state=started
  with_items: ec2.tagged_instances


- name: setup a simple load balancer
  ec2_elb_lb:
    name: aws-elb-demo
    state: present
    region: us-west-2
    zones:
      - us-west-2a
    listeners:
      - protocol: http
        load_balancer_port: 80
        instance_port: 80
    register: aws-elb-demo

- name: add the webservers to the load balancer
  local_action: ec2_elb
  args:
    instance_id: "{{ item.id }}"
    ec2_elbs: aws-elb-demo
    state: present
    region: us-east-1
  with_items: ec2.tagged_instances
